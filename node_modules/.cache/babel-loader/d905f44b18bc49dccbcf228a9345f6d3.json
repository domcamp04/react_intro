{"ast":null,"code":"var _jsxFileName = \"/Users/Dominick/Documents/codingtemple-sept-2021/week7/react-intro-72/src/components/UserEdit.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class UserEdit extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const username = e.target.username.value;\n      const email = e.target.email.value;\n      const password = e.target.password.value;\n      let myHeaders = new Headers();\n      myHeaders.append('Authorization', `Bearer ${localStorage.getItem('token')}`);\n      myHeaders.append('Content-Type', 'application/json');\n      let formData = {\n        username: username,\n        email: email\n      };\n\n      if (password) {\n        formData.password = password;\n      }\n\n      let body = JSON.stringify(formData);\n      fetch(`http://localhost:5000/api/users/${this.props.user.id}`, {\n        method: 'PUT',\n        headers: myHeaders,\n        body: body\n      }).then(res => res.json()).then(data => {\n        console.log(data);\n        this.props.updateUser();\n        this.setState({\n          redirect: true\n        });\n      });\n    };\n\n    this.deleteUser = () => {\n      let myHeaders = new Headers();\n      myHeaders.append('Authorization', `Bearer ${localStorage.getItem('token')}`);\n      fetch(`http://localhost:5000/api/users/${this.props.user.id}`, {\n        method: 'DELETE',\n        headers: myHeaders\n      }).then(res => {\n        if (res.status === 204) {\n          this.props.updateUser();\n          this.setState({\n            redirect: true\n          });\n        }\n      }).catch(err => console.error(err));\n    };\n\n    this.state = {\n      redirect: false\n    };\n  }\n\n  render() {\n    const user = this.props.user;\n    return this.state.redirect ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 38\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"text-center\",\n          children: [\"Edit User: \", user.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"username\",\n              defaultValue: user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"email\",\n              defaultValue: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control\",\n              name: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            className: \"btn btn-dark\",\n            value: \"Update User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: this.deleteUser,\n        children: \"Delete User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/Dominick/Documents/codingtemple-sept-2021/week7/react-intro-72/src/components/UserEdit.js"],"names":["React","Component","Redirect","UserEdit","constructor","props","handleSubmit","e","preventDefault","username","target","value","email","password","myHeaders","Headers","append","localStorage","getItem","formData","body","JSON","stringify","fetch","user","id","method","headers","then","res","json","data","console","log","updateUser","setState","redirect","deleteUser","status","catch","err","error","state","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom';\n\nexport default class UserEdit extends Component {\n    constructor(props){\n        super(props);\n        this.state = {redirect: false}\n    }\n\n    handleSubmit = (e) =>{\n        e.preventDefault();\n        const username = e.target.username.value;\n        const email = e.target.email.value;\n        const password = e.target.password.value;\n\n        let myHeaders = new Headers();\n        myHeaders.append('Authorization', `Bearer ${localStorage.getItem('token')}`);\n        myHeaders.append('Content-Type', 'application/json');\n\n        let formData = {\n            username: username,\n            email: email\n        }\n        if (password){\n            formData.password = password\n        }\n        let body = JSON.stringify(formData);\n\n        fetch(`http://localhost:5000/api/users/${this.props.user.id}`,{\n            method: 'PUT',\n            headers: myHeaders,\n            body: body\n        }).then(res => res.json())\n            .then(data => {\n                console.log(data)\n                this.props.updateUser()\n                this.setState({redirect: true})\n            })\n    }\n\n    deleteUser = () =>{\n        let myHeaders = new Headers();\n        myHeaders.append('Authorization', `Bearer ${localStorage.getItem('token')}`)\n\n        fetch(`http://localhost:5000/api/users/${this.props.user.id}`,{\n            method: 'DELETE',\n            headers: myHeaders\n        }).then(res => {\n            if(res.status === 204){\n                this.props.updateUser()\n                this.setState({\n                    redirect:true\n                })\n            }\n        }).catch(err => console.error(err))\n    }\n\n    render() {\n        const user = this.props.user\n        return this.state.redirect ? <Redirect to='/users' /> :(\n            <div>\n\n                <form onSubmit={this.handleSubmit}>\n                    <h6 className='text-center'>Edit User: {user.username}</h6>\n                    <div className='form-group'>\n                        <fieldset>\n                            <label htmlFor='username'>Username</label>\n                            <input type='text' className='form-control' name='username' defaultValue={user.username}/>\n                        </fieldset>\n                        <fieldset>\n                            <label htmlFor='email'>Email</label>\n                            <input type='text' className='form-control' name='email' defaultValue={user.email}/>\n                        </fieldset>\n                        <fieldset>\n                            <label htmlFor='password'>Password</label>\n                            <input type='password' className='form-control' name='password' />\n                        </fieldset>\n                        <input type='submit' className='btn btn-dark' value='Update User' />\n                    </div>\n                </form>\n                <button className='btn btn-danger' onClick={this.deleteUser}>Delete User</button>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}